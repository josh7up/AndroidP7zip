apply plugin: 'com.android.model.library'

model {
    android {
        compileSdkVersion rootProject.ext.configuration.compileSdk
        buildToolsVersion rootProject.ext.configuration.buildTools

        defaultConfig {
            minSdkVersion.apiLevel 15
            targetSdkVersion.apiLevel rootProject.ext.configuration.targetSdk
            versionCode 1
            versionName "1.0"
            testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        }

        ndk {
            moduleName "p7zip"
            platformVersion 18
            CFlags.add('-I' + file("src/main/jni/p7zip/CPP"))
            CFlags.add('-I' + file("src/main/jni/p7zip/CPP/include_windows"))
            cppFlags.add('-I' + file("src/main/jni"))
            cppFlags.add('-I' + file("src/main/jni/p7zip/CPP"))
            cppFlags.add('-I' + file("src/main/jni/p7zip/CPP/Common"))
            cppFlags.add('-I' + file("src/main/jni/p7zip/CPP/include_windows"))
            cppFlags.add('-I' + file("src/main/jni/p7zip/CPP/myWindows"))

            cppFlags.addAll(["-DANDROID_NDK", "-fexceptions", "-DNDEBUG", "-D_REENTRANT",
                             "-DENV_UNIX", "-DBREAK_HANDLER", "-DUNICODE", "-D_UNICODE",
                             "-DUNIX_USE_WIN_FILE", "-fPIC"])
            ldLibs.addAll(["log"])
            stl "gnustl_static"
            abiFilters.addAll(['armeabi'])
            abiFilters.addAll(['armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'])
        }
    }
    android.buildTypes {
        debug {
            ndk {
                cppFlags.add('-DNDK_DEBUG')
            }
        }
        release {
            minifyEnabled false
            proguardFiles.add(file('proguard-rules.pro'))
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
}
